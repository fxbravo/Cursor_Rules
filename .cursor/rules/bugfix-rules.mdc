---
description: "Minimal bug fixes and error correction guidelines"
globs: ["**/*.{ts,js,jsx,tsx,py,rb,java,cs,php}", "!node_modules/**", "!dist/**", "!build/**"]
alwaysApply: false
---

# BUGFIX Rules

## INTERDICTIONS ABSOLUES
NEVER create any new files during bugfix
NEVER add new functions or methods while fixing
NEVER improve code style, naming, or structure while fixing
NEVER modify any code that is currently working correctly

## MANDATORY ACTIONS
Document exact steps to reproduce the bug before fixing
Identify the specific line numbers causing the issue using debugger
Change maximum 5 lines of code total
Add one test case covering this specific bug scenario
Verify all existing tests continue to pass

## ALLOWED OPERATIONS ONLY
Fix incorrect logic in existing functions
Correct wrong variable values or conditions
Add missing null checks or error handling for identified edge case
Fix typos in string literals that cause functional errors
Correct mathematical operations or boolean logic errors

## PROCESS
1. Write reproduction steps that consistently trigger the bug
2. Use debugger or logging to identify exact failing line numbers
3. Make smallest possible change to fix only this specific issue
4. Write test that would have caught this bug originally
5. Run full test suite and verify no new failures introduced

## SUCCESS CRITERIA
Original bug: no longer reproducible
Code modifications: maximum 5 lines changed
Root cause: identified and addressed
Regression prevention: new test added covering this scenario
Existing functionality: completely unaffected
All pre-existing tests: still passing

## VALIDATION RULE
If your solution involves improving other things, this is NOT a bugfix.
EXCEPTION: If bug reveals architectural flaw violating SOLID, STOP and ask: "This bug exposes architectural issue. Should I fix minimal bug now and create separate task for architectural improvement?"# BUGFIX Rules

## INTERDICTIONS ABSOLUES
NEVER create any new files during bugfix
NEVER add new functions or methods while fixing
NEVER improve code style, naming, or structure while fixing
NEVER modify any code that is currently working correctly

## MANDATORY ACTIONS
Document exact steps to reproduce the bug before fixing
Identify the specific line numbers causing the issue using debugger
Change maximum 5 lines of code total
Add one test case covering this specific bug scenario
Verify all existing tests continue to pass

## ALLOWED OPERATIONS ONLY
Fix incorrect logic in existing functions
Correct wrong variable values or conditions
Add missing null checks or error handling for identified edge case
Fix typos in string literals that cause functional errors
Correct mathematical operations or boolean logic errors

## PROCESS
1. Write reproduction steps that consistently trigger the bug
2. Use debugger or logging to identify exact failing line numbers
3. Make smallest possible change to fix only this specific issue
4. Write test that would have caught this bug originally
5. Run full test suite and verify no new failures introduced

## SUCCESS CRITERIA
Original bug: no longer reproducible
Code modifications: maximum 5 lines changed
Root cause: identified and addressed
Regression prevention: new test added covering this scenario
Existing functionality: completely unaffected
All pre-existing tests: still passing

## VALIDATION RULE
If your solution involves improving other things, this is NOT a bugfix.
EXCEPTION: If bug reveals architectural flaw violating SOLID, STOP and ask: "This bug exposes architectural issue. Should I fix minimal bug now and create separate task for architectural improvement?"